--- InstallableLikelihood.py	2024-06-10 11:49:56.539037000 -0400
+++ InstallableLikelihood2.py	2024-06-10 11:50:25.729064000 -0400
@@ -34,18 +34,18 @@
             logger = get_logger(name)
             packages_path = kwargs.get("packages_path") or resolve_packages_path()
             old = False
-            try:
-                installed = self.is_installed(path=packages_path)
-            except Exception as excpt:  # catches VersionCheckError and unexpected ones
-                installed = False
-                old = isinstance(excpt, VersionCheckError)
-                logger.error(f"{type(excpt).__name__}: {excpt}")
-            if not installed:
-                not_or_old = ("is not up to date" if old
-                              else "has not been correctly installed")
-                raise ComponentNotInstalledError(
-                    logger, (f"The data for this likelihood {not_or_old}. To install it, "
-                             f"run `cobaya-install {name}{' --upgrade' if old else ''}`"))
+            #try:
+            #    installed = self.is_installed(path=packages_path)
+            #except Exception as excpt:  # catches VersionCheckError and unexpected ones
+            #    installed = False
+            #    old = isinstance(excpt, VersionCheckError)
+            #    logger.error(f"{type(excpt).__name__}: {excpt}")
+            #if not installed:
+            #    not_or_old = ("is not up to date" if old
+            #                  else "has not been correctly installed")
+            #    raise ComponentNotInstalledError(
+            #        logger, (f"The data for this likelihood {not_or_old}. To install it, "
+            #                 f"run `cobaya-install {name}{' --upgrade' if old else ''}`"))
         super().__init__(*args, **kwargs)
 
     @classmethod
