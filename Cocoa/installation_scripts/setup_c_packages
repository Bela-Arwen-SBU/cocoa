if [ -z "${ROOTDIR}" ]; then
    echo 'ERROR ENV VARIABLE ROOTDIR IS NOT DEFINED' >&2
    return 1
fi
if [ -z "${CXX_COMPILER}" ]; then
    echo 'ERROR ENV VARIABLE CXX_COMPILER IS NOT DEFINED' >&2
    return 1
fi
if [ -z "${C_COMPILER}" ]; then
    echo 'ERROR ENV VARIABLE C_COMPILER IS NOT DEFINED' >&2
    return 1
fi
if [ -z "${CMAKE}" ]; then
    echo 'ERROR ENV VARIABLE MAKE IS NOT DEFINED' >&2
    return 1
fi
if [ -z "${FORTRAN_COMPILER}" ]; then
    echo 'ERROR ENV VARIABLE FORTRAN_COMPILER IS NOT DEFINED' >&2
    return 1
fi
if [ -z "${MAKE_NUM_THREADS}" ]; then
    echo 'ERROR ENV VARIABLE MAKE_NUM_THREADS IS NOT DEFINED' >&2
    return 1
fi

# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------
# ------------------------------------- C PACKAGES -------------------------------------
# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------

if [ -z "${DEBUG_C_PACKAGES}" ]; then
  export OUTPUT_CPACKAGES_1="/dev/null"
  export OUTPUT_CPACKAGES_2="/dev/null"
else
  export OUTPUT_CPACKAGES_1="/dev/tty"
  export OUTPUT_CPACKAGES_2="/dev/tty"
fi

# --------------------------------------------------------------------------------------
# ---------------------------------------- FFTW ----------------------------------------
# --------------------------------------------------------------------------------------
if [ -z "${IGNORE_C_FFTW_INSTALLATION}" ]; then
  echo -e '\033[1;34m''INSTALLING FFTW C LIBRARY - \e[4mIT WILL TAKE A WHILE''\033[0m'

  cd $ROOTDIR/../cocoa_installation_libraries/$COCOA_FFTW_DIR
  
  FC=$FORTRAN_COMPILER CC=$C_COMPILER ./configure --enable-openmp \
  --prefix=$ROOTDIR/.local --enable-shared=yes --enable-static=yes > ${OUTPUT_CPACKAGES_1} 2> ${OUTPUT_CPACKAGES_2}
  if [ $? -eq 0 ]; then
    echo "FFTW RUN CONFIGURE DONE"
  else
    echo "FFTW COULD NOT RUN CONFIGURE"
    cd $ROOTDIR
    return 1
  fi

  make -j $MAKE_NUM_THREADS all > ${OUTPUT_CPACKAGES_1} 2> ${OUTPUT_CPACKAGES_2}
  if [ $? -eq 0 ]; then
    echo "FFTW RUN MAKE DONE"
  else
    echo "FFTW COULD NOT RUN MAKE"
    cd $ROOTDIR
    return 1
  fi

  make install > ${OUTPUT_CPACKAGES_1} 2> ${OUTPUT_CPACKAGES_2}
  if [ $? -eq 0 ]; then
    echo "FFTW MAKE INSTALL RUN DONE"
  else
    echo "FFTW COULD NOT RUN MAKE INSTALL"
    cd $ROOTDIR
    return 1
  fi

  cd $ROOTDIR
  echo 'INSTALLING C FFTW LIBRARY - DONE'
fi

# --------------------------------------------------------------------------------------
# --------------------------------------- CFITSIO --------------------------------------
# --------------------------------------------------------------------------------------
if [ -z "${IGNORE_C_CFITSIO_INSTALLATION}" ]; then
  echo -e '\033[1;34m''INSTALLING CFITSIO C LIBRARY - \e[4mIT MIGHT TAKE A WHILE''\033[0m'

  cd $ROOTDIR/../cocoa_installation_libraries/$COCOA_CFITSIO_DIR

  rm -f CMakeCache.txt

  mkdir ./CFITSIOBUILD
  cd ./CFITSIOBUILD

  $CMAKE -DBUILD_SHARED_LIBS=TRUE -DCMAKE_INSTALL_PREFIX=$ROOTDIR/.local \
    -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER \
    -DCMAKE_FC_COMPILER=FORTRAN_COMPILER \
    --log-level=ERROR .. > ${OUTPUT_CPACKAGES_1} 2> ${OUTPUT_CPACKAGES_2}
  if [ $? -eq 0 ]; then
    echo "CFITSIO RUN CMAKE DONE"
  else
    echo "CFITSIO COULD NOT RUN CMAKE"
    cd $ROOTDIR
    return 1
  fi

  make -j $MAKE_NUM_THREADS all > ${OUTPUT_CPACKAGES_1} 2> ${OUTPUT_CPACKAGES_2}
  if [ $? -eq 0 ]; then
    echo "CFITSIO RUN MAKE DONE"
  else
    echo "CFITSIO COULD NOT RUN MAKE"
    cd $ROOTDIR
    return 1
  fi

  make install > ${OUTPUT_CPACKAGES_1} 2> ${OUTPUT_CPACKAGES_2}
  if [ $? -eq 0 ]; then
    echo "CFITSIO RUN MAKE INSTALL DONE"
  else
    echo "CFITSIO COULD NOT RUN MAKE INSTALL"
    cd $ROOTDIR
    return 1
  fi

  cd ../
  rm -rf ./CFITSIOBUILD

  cd $ROOTDIR
  echo 'INSTALLING C CFITSIO LIBRARY - DONE'
fi

# --------------------------------------------------------------------------------------
# ----------------------------------------- GSL ----------------------------------------
# --------------------------------------------------------------------------------------
if [ -z "${IGNORE_C_GSL_INSTALLATION}" ]; then
  echo -e '\033[1;34m''INSTALLING GSL C LIBRARY - \e[4mIT WILL TAKE A WHILE''\033[0m'

  cd $ROOTDIR/../cocoa_installation_libraries/$COCOA_GSL_DIR

  CC=$C_COMPILER ./configure --prefix=$ROOTDIR/.local --enable-shared=yes \
    --enable-static=yes > ${OUTPUT_CPACKAGES_1} 2> ${OUTPUT_CPACKAGES_2}
  if [ $? -eq 0 ]; then
    echo "GSL RUN CONFIGURE DONE"
  else
    echo "GSL COULD NOT RUN CONFIGURE"
    cd $ROOTDIR
    return 1
  fi

  make -j $MAKE_NUM_THREADS all > ${OUTPUT_CPACKAGES_1} 2> ${OUTPUT_CPACKAGES_2}
  if [ $? -eq 0 ]; then
    echo "GSL RUN MAKE DONE"
  else
    echo "GSL COULD NOT RUN MAKE"
    cd $ROOTDIR
    return 1
  fi

  make install > ${OUTPUT_CPACKAGES_1} 2> ${OUTPUT_CPACKAGES_2}
  if [ $? -eq 0 ]; then
    echo "GSL RUN MAKE INSTALL DONE"
  else
    echo "GSL COULD NOT RUN MAKE INSTALL"
    cd $ROOTDIR
    return 1
  fi

  cd $ROOTDIR
  echo 'INSTALLING C GSL LIBRARY - DONE'
fi

# --------------------------------------------------------------------------------------
# ----------------------------------- EUCLID EMU ---------------------------------------
# --------------------------------------------------------------------------------------

if [ -z "${DEBUG_PIP_OUTPUT}" ]; then
  export OUTPUT_PIP_1="/dev/null"
  export OUTPUT_PIP_2="/dev/null"
else
  export OUTPUT_PIP_1="/dev/tty"
  export OUTPUT_PIP_2="/dev/tty"
fi

# WE MIGRATED euclidemu2 TO setup_c_packages SCRIPT BECAUSE IT DEPENDS ON GSL-GNU LIB
env CXX=$CXX_COMPILER CC=$C_COMPILER  $PIP3 install --global-option=build_ext \
  $ROOTDIR/../cocoa_installation_libraries/euclidemu2-1.2.0 --no-dependencies \
  --prefix=$ROOTDIR/.local --no-index > ${OUTPUT_PIP_1} 2> ${OUTPUT_PIP_2}
if [ $? -ne 0 ]; then
  echo "PROBLEM PIP euclidemul"
  return 1
else
  echo "PIP euclidemul DONE"
fi

# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------