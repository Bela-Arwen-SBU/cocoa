if [ -z "${ROOTDIR}" ]; then
    echo 'ERROR ENV VARIABLE ROOTDIR IS NOT DEFINED' >&2
    return 1
fi
if [ -z "${CXX_COMPILER}" ]; then
    echo 'ERROR ENV VARIABLE CXX_COMPILER IS NOT DEFINED' >&2
    return 1
fi
if [ -z "${C_COMPILER}" ]; then
    echo 'ERROR ENV VARIABLE C_COMPILER IS NOT DEFINED' >&2
    return 1
fi
if [ -z "${FORTRAN_COMPILER}" ]; then
    echo 'ERROR ENV VARIABLE FORTRAN_COMPILER IS NOT DEFINED' >&2
    return 1
fi
if [ -z "${PYTHON3}" ]; then
  echo 'ERROR ENV VARIABLE PYTHON3 IS NOT DEFINED' >&2
  return 1
fi

# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------
# ------------------------- COMPILE PLANCK LIKELIHOOD ------------------------
# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------
if [ -z "${IGNORE_PLANCK_COMPILATION}" ]; then
  echo -e '\033[1;34m''COMPILING PLANCK''\033[0m'

  if [ -z "${DEBUG_PLANCK_OUTPUT}" ]; then
    export OUTPUT_PLANCK_1="/dev/null"
    export OUTPUT_PLANCK_2="/dev/null"
  else
    export OUTPUT_PLANCK_1="/dev/tty"
    export OUTPUT_PLANCK_2="/dev/tty"
  fi
  
  if [ -z "${IGNORE_C_CFITSIO_INSTALLATION}" ]; then
    export CFITSLIBS=$ROOTDIR/.local/lib
  else
    export CFITSLIBS=$GLOBAL_PACKAGES_LOCATION
  fi
  
  if [ -z "${IGNORE_FORTRAN_INSTALLATION}" ]; then
    export LAPALIBS=$ROOTDIR/.local
  else
    export LAPALIBS=$GLOBAL_PACKAGES_LOCATION
  fi

  # ---------------------------------------------------------------------------
  # ---------------------------------------------------------------------------
  if [ -z "${USE_SPT_CLIK_PLANCK}" ]; then
    cd $ROOTDIR/external_modules/code/planck/code/plc_3.0/plc-3.1/
  else
    cd $ROOTDIR/external_modules/code/planck/code/spt_clik/
  fi
  # ---------------------------------------------------------------------------
  # ---------------------------------------------------------------------------

  rm -rf .waf*

  $PYTHON3 waf distclean > ${OUTPUT_PLANCK_1} 2> ${OUTPUT_PLANCK_2}
  if [ $? -ne 0 ]; then
    echo -e '\033[0;31m'"PLANCK COULD NOT RUN \e[3mWAF DISTCLEAN"'\033[0m'
  else
    echo -e '\033[0;32m'"PLANCK RUN \e[3mWAF CLEAN\e[0m\e\033[0;32m DONE"'\033[0m'
  fi
  
  FC=$FORTRAN_COMPILER CC=$C_COMPILER CXX=$CXX_COMPILER $PYTHON3 waf configure \
    --gcc --gfortran --cfitsio_islocal --prefix $ROOTDIR/.local \
    --lapack_prefix=${LAPALIBS} --cfitsio_lib=${CFITSLIBS} \
    --python=${PYTHON3} > ${OUTPUT_PLANCK_1} 2> ${OUTPUT_PLANCK_2}
  if [ $? -ne 0 ]; then
    echo -e '\033[0;31m'"PLANCK COULD NOT RUN WAF CONFIGURE"'\033[0m'
    cd $ROOTDIR
    return 1
  else
    echo -e '\033[0;32m'"PLANCK RUN \e[3mWAF CONFIGURE RUN\e[0m\e\033[0;32m DONE"'\033[0m'
  fi
  
  $PYTHON3 waf install -v > ${OUTPUT_PLANCK_1} 2> ${OUTPUT_PLANCK_2}
  if [ $? -ne 0 ]; then
    echo -e '\033[0;31m'"PLANCK COULD NOT RUN \e[3mWAF INSTALL"'\033[0m'
    cd $ROOTDIR
    return 1
  else
    echo -e '\033[0;32m'"PLANCK RUN \e[3mWAF INSTALL\e[0m\e\033[0;32m DONE"'\033[0m'
  fi

  cd $ROOTDIR
  echo -e '\033[1;34m''\e[4mCOMPILING PLANCK DONE''\033[0m'
fi
