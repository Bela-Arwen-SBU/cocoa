if [ -z "${ROOTDIR}" ]; then
    echo 'ERROR ROOTDIR not define'
    return
fi
if [ -z "${CXX_COMPILER}" ]; then
    echo 'ERROR CXX_COMPILER not define'
    return
fi
if [ -z "${C_COMPILER}" ]; then
    echo 'ERROR C_COMPILER not define'
    return
fi
if [ -z "${FORTRAN_COMPILER}" ]; then
    echo 'ERROR FORTRAN_COMPILER not define'
    return
fi
if [ -z "${PYTHON3}" ]; then
    echo 'ERROR PYTHON3 not define'
    return
fi


# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------
# ------------------------- COMPILE PLANCK LIKELIHOOD ------------------------
# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------

if [ -z "${IGNORE_PLANCK_COMPILATION}" ]; then
    if [ -n "${CLIK_PATH}" ]; then
        export OLD_CLIK_PATH=$CLIK_PATH
    fi

    if [ -n "${CLIK_DATA}" ]; then
        export OLD_CLIK_DATA=$CLIK_DATA
    fi

    if [ -n "${CLIK_PLUGIN}" ]; then
        export OLD_CLIK_PLUGIN=$CLIK_PLUGIN
    fi

    cd $ROOTDIR/external_modules/code/planck/code/plc_3.0/plc-3.01/

    $PYTHON3 waf distclean

    if [ -z "${IGNORE_C_CFITSIO_INSTALLATION}" ]; then
        FC=$FORTRAN_COMPILER CC=$C_COMPILER CXX=$CXX_COMPILER $PYTHON3 waf configure --gcc --gfortran --cfitsio_islocal --cfitsio_include=$ROOTDIR/.local/include --cfitsio_lib=$ROOTDIR/.local/lib --prefix $ROOTDIR/.local --debug --python=$ROOTDIR/.local/bin/python
    else
        FC=$FORTRAN_COMPILER CC=$C_COMPILER CXX=$CXX_COMPILER $PYTHON3 waf configure --gcc --gfortran --cfitsio_islocal --prefix $ROOTDIR/.local --cfitsio_prefix=$GLOBAL_PACKAGES_LOCATION --python=$ROOTDIR/.local/bin/python
    fi

    $PYTHON3 waf install -v

    cd $ROOTDIR
fi
